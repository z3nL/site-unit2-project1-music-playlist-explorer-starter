/* Data Loading Operations */
// All data, barring the first playlist and its content, was generated by Metamate

// Request and load data
async function loadData() {
    try {
        // Gather playlist array
        const response = await fetch('./data/data.json');
        if (!response.ok) {
            throw new Error('Data retrieval: bad response');
        }
        const playlists = await response.json();

        // Establish cards
        let cardBase = document.getElementsByClassName("playlist-cards")[0];
        // Build playlist cards and their respective modals
        playlists.forEach(pl => {
            // Build card | Indentations represent divisional nestings
            let card = document.createElement("article");
                card.id = `card${pl.playlistID}`;

                // Card image
                let cardPlCover = document.createElement("img");
                    cardPlCover.id = 'cover';
                    cardPlCover.onclick = () => {
                        toggleModalv2(card.id);
                    };
                    cardPlCover.src = pl.playlist_art;
                    cardPlCover.alt =  'playlist cover';
                    card.appendChild(cardPlCover);

                // Playlist name
                let cardPlName = document.createElement("h2");
                    cardPlName.textContent = pl.playlist_name;
                    card.appendChild(cardPlName);

                // Playlist author
                let cardPlAuthor = document.createElement("p");
                    cardPlAuthor.textContent = `by ${pl.playlist_author}`;
                    card.appendChild(cardPlAuthor);
                
                // Like counter division
                let lcDiv = document.createElement("div");
                    lcDiv.className = 'likecount';
                    let heart = document.createElement("img");
                        heart.id = `heart${pl.playlistID}`;
                        heart.className = "empty";
                        heart.onclick = () => {
                            likePL(heart.id);
                        }
                        heart.src = './assets/img/hearticon.png';
                        heart.alt = 'a heart icon';
                        lcDiv.appendChild(heart);
                    let likecount = document.createElement("p");
                        likecount.id = `lc${pl.playlistID}`;
                        likecount.textContent = pl.like_count;
                        lcDiv.appendChild(likecount);
                    card.appendChild(lcDiv);
                
            cardBase.appendChild(card);
        });

    } catch (error) {
        console.error('Data retrieval: ', error);
    }
}
loadData();

/* Modal Open/Close Operations */

// Second iteration of modal toggle after redundant predecessor
async function toggleModalv2(id) {
    try {
        // Check if already open
        let modal = document.getElementsByClassName("testModal")[0];
        if (modal.style.display === "flex") {
            modal.style.display = "none";
            let plContent = document.getElementById("modalPlContent");
            plContent.remove();
            return;
        }
        modal.style.display = "flex";

         // Gather playlist array
        const response = await fetch('./data/data.json');
        if (!response.ok) {
            throw new Error('Data retrieval: bad response');
        }
        const playlists = await response.json();

        // Select playlist and populate info
        let pl = playlists[id.split("card")[1]];

        let cover = document.getElementById("modalCover");
            cover.setAttribute("src", pl.playlist_art);
        
        let title = document.getElementById("modalTitle");
            title.innerText = pl.playlist_name;
        
        let author = document.getElementById("modalAuthor");
            author.innerText = `by ${pl.playlist_author}`
        
        let modalContent = document.getElementById("testModalContent");
            let plContent = document.createElement("div");
                plContent.id = "modalPlContent";
                plContent.className = "playlistContent";
                pl.songs.forEach(song => {
                    let songItem = document.createElement("article");

                        // Left side of song item: cover, gen. info
                        let sLeft = document.createElement("div");
                            sLeft.className = "left";

                            // Cover
                            let sCover = document.createElement("img");
                                sCover.id = "cover";
                                sCover.src = song.cover;
                                sCover.alt = "song cover";
                                sLeft.appendChild(sCover);

                            // Gen. info
                            let sInfo = document.createElement("div");
                                sInfo.className = "songInfo";
                                let sTitle = document.createElement("h3");
                                    sTitle.innerText = song.title
                                    sInfo.appendChild(sTitle);
                                let artist = document.createElement("p");
                                    artist.innerText = song.artist;
                                    sInfo.appendChild(artist);
                                let album = document.createElement("p");
                                    album.innerText = song.album;
                                    sInfo.append(album);
                                sLeft.appendChild(sInfo);
                            songItem.appendChild(sLeft);

                        // Right side of song item: runtime
                        let sRight = document.createElement("div");
                            sRight.className = "right";
                            let runtime = document.createElement("p");
                                runtime.innerText = song.runtime;
                                sRight.appendChild(runtime);
                            songItem.appendChild(sRight);

                    plContent.appendChild(songItem);
                });
            modalContent.appendChild(plContent);

    } catch (error) {
        console.log('toggle Modal: ', error);
    }
}
window.onclick = function(event) {
    // Resets status and exits modal overlay when surrounding area is clicked
    if (event.target.className === "testModal") {
        event.target.style.display = "none";
        let plContent = document.getElementById("modalPlContent");
        plContent.remove();
    }
}

/* Liking Operations */

async function likePL(id) {
    try {

        let curHeart = document.getElementById(id);

        let idNum = id.split("heart")[1];
        let count = document.getElementById(`lc${idNum}`);

        if (curHeart.className === "empty") {
            curHeart.setAttribute("src", './assets/img/fullheart.png');
            curHeart.setAttribute("class", "full");
            count.innerText = parseInt(count.innerText) + 1;
        }
        else {
            curHeart.setAttribute("src", './assets/img/hearticon.png');
            curHeart.setAttribute("class", "empty");
            count.innerText = parseInt(count.innerText) - 1;
        }
    } catch (error) {
        console.error('Liking: ', error);
    }
}